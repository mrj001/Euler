;@com.wudsn.ide.asm.hardware=C64
!to "TestDecimalOutput.prg", cbm 
!cpu 6510
!sl "TestDecimalOutput.labels"

; BASIC program: (Where .run is replaced by its address.)
;   10 SYS .run
* = $0801
    !byte <.basend,>.basend,$0A,$00,$9e
    !byte .run/10000 + '0'    
    !byte .run/1000 % 10 + '0'    
    !byte .run/100 % 10 + '0'   
    !byte .run/10 % 10 + '0' 
    !byte .run % 10 + '0' 
    !byte 0
.basend !byte 0, 0

mathbcdprec = $05

!source "../libs/preamble.a"
!source "../libs/screen.a"

; This macro prints the label for the current test
!macro print_label .lbl {
    lda #<.lbl
    sta+1 straddr
    lda #>.lbl
    sta+1 straddr + 1 
    jsr subprint
}

; Clear screen before running tests
.run
    jsr subclearscreen
    jmp test1

!zone test1 {
;
; Test 1: output two bytes to BCD 
;    The MSB is zero.
;
.l1 !scr "one: ", 13, 0
.expected !scr "expected: 42", 13, 0
.actual   !scr "actual:   ", 0
.input=*
!byte $42
!fill mathbcdprec - 1, $00

test1
    +print_label .l1
    +print_label .expected
    +print_label .actual
    +set_param_outputBCD .input
    jsr sub_outputBCD
    jmp test2
}

!zone test2 {
;
; Test 2: output two bytes to BCD 
;    There are no leading zeroes.
;
.l2 !scr 13, "two: ", 13, 0
.expected !scr "expected: 1729", 13, 0
.actual   !scr "actual:   ", 0
.input=*
!byte $29, $17
!fill mathbcdprec - 2, $00
test2:
    +print_label .l2
    +print_label .expected
    +print_label .actual
    +set_param_outputBCD .input
    jsr sub_outputBCD
    jmp test3
}

!zone test3 {
;
; Test 3: output five bytes to BCD 
;    There is one leading zero to be suppressed.
;    There is one zero within the number that must
;    be included in the output.  It is in the 
;    high order nybble of the second most significant byte.
;
.l3 !scr 13, "three: ", 13, 0
.expected !scr "expected: 704571793", 13, 0
.actual   !scr "actual:   ", 0
.input=*
!byte $93, $17, $57, $04, $07
test3:
    +print_label .l3
    +print_label .expected
    +print_label .actual
    +set_param_outputBCD .input
    jsr sub_outputBCD
    jmp test4
}

!zone test4 {
;
; Test 4: output five bytes to BCD 
;    There is one leading zero to be suppressed.
;    There is one zero within the number that must
;    be included in the output.  It is in the 
;    low order nybble of the second most significant byte.
;
.l4 !scr 13, "four: ", 13, 0
.expected !scr "expected: 280926837", 13, 0
.actual   !scr "actual:   ", 0
.input=*
!byte $37, $68, $92, $80, $02
test4:
    +print_label .l4
    +print_label .expected
    +print_label .actual
    +set_param_outputBCD .input
    jsr sub_outputBCD
    jmp test5
}

!zone test5 {
;
; Test 5: Output a zero
;
.l5 !scr 13, "five: ", 13, 0
.expected !scr "expected: 0", 13, 0
.actual   !scr "actual:   ", 0
.input=*
!byte $00, $00, $00, $00, $00
test5:
    +print_label .l5
    +print_label .expected
    +print_label .actual
    +set_param_outputBCD .input
    jsr sub_outputBCD
}

; clean up & exit
   jsr screen_set_basic_cursor
   rts

